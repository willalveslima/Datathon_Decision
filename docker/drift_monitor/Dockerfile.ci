FROM google/cloud-sdk:slim

# Define o fuso horário para o contêiner.
ENV TZ=America/Sao_Paulo
RUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone

WORKDIR /app

# Copia os requisitos específicos do serviço de drift.
# Este requirements.txt deve conter APENAS as dependências de produção do serviço de drift.
COPY docker/drift_monitor/requirements.txt .

# Instala as dependências Python.
RUN pip3 install --break-system-packages --no-cache-dir -r requirements.txt

# Cria o diretório para os modelos (se o serviço de drift precisar ler modelos)
# O serviço de drift precisa ler common_skills.pkl para calcular data drift em habilidades.
RUN mkdir -p /app/models

COPY gcp-key.json /tmp/gcp-key.json
COPY gcp-id.txt /tmp/gcp-id.txt

# Autentique o gcloud CLI usando a chave da conta de serviço
# e defina o ID do projeto.
# Use --activate-gservice-account para ativar a conta de serviço.
# O ID do projeto é lido do ficheiro gcp-id.txt.
RUN export GCP_PROJECT_ID=$(cat /tmp/gcp-id.txt) && \
    gcloud auth activate-service-account --key-file=/tmp/gcp-key.json --project=$GCP_PROJECT_ID && \
    gcloud config set project $GCP_PROJECT_ID

# Baixa os arquivos do modelo do Cloud Storage que o serviço de drift precisa.
# O Service Account usado pelo GitHub Actions precisa ter permissão de leitura no bucket.
RUN gsutil cp gs://datathon-decision/models/common_skills.pkl /app/models/

# Copia o diretório do serviço de drift
COPY src/drift_monitor_service/ ./src/drift_monitor_service/

# Expõe a porta em que o serviço de drift será executado
EXPOSE 8001

# Limpe o ficheiro da chave da conta de serviço para segurança.
# É crucial remover as credenciais sensíveis da imagem final.
RUN rm /tmp/gcp-key.json && \
    rm /tmp/gcp-id.txt

# Comando para iniciar o serviço
CMD ["uvicorn", "src.drift_monitor_service.main:app", "--host", "0.0.0.0", "--port", "8001"]

